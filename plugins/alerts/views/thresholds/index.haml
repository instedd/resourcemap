- content_for :head do
  = stylesheet_link_tag 'alerts'
= render '/tabs'

.tabsline
  #thresholds-main.hidden-until-loaded{ ko(css: { ready: :isReady }) }
    - if collection_admin?
      %h2 Alert
    /ko foreach :thresholds
    /ko if: $data != $root.currentThreshold()
    .box.grey.w60
      .toptitle
        .ord-buttons
          %input{ ko(value: :ord) }
          %button.up{ ko(click: '$root.moveThresholdUp'), title: _('Move up') }
          %button.down{ ko(click: '$root.moveThresholdDown'), title: _('Move down') }
        %span

          %span{ ko(text: :propertyName) }
          →
          /ko if: missingFields
          Invalid because of a deleted field in a condition
          //ko

          /ko if: !missingFields
          in
          /ko if: isAllSite() == "true"
          all sites
          //ko
          /ko if: !(isAllSite() == "true")
          /ko foreach: alertSites
          %span{ ko(text: :name) }
          //ko
          //ko

          -# list all conditions
          /ko foreach :conditions
          /ko if: $parent.isFirstCondition($data)
          When
          //ko
          /ko if: !$parent.isFirstCondition($data)
          /ko if: $parent.isAllCondition() == "true"
          and
          //ko
          /ko if: !($parent.isAllCondition() == "true")
          or
          //ko
          //ko
          %span{ ko(text: 'field().name()') }
          %span{ ko(text: 'op().label()') }
          %span{ ko(text: 'formattedValue') }


          /ko if: valueType().label() == 'a percentage of'
          of
          %span{ ko(text: 'compareField().name()') }
          //ko
          -# Closing for !missingFields:
          //ko

          //ko
          → change icon to:
          %br
          .alert-icon
            %img{"data-bind" => "attr: { src:iconUrl }" }
          -# %span.stat{"data-bind" => "style: { backgroundColor:icon }" }
          %br
          %br
          %br
      .rightbuttons
        %button.fdelete{ ko(click: '$root.deleteThreshold') }

      %button.farrow{ ko(click: '$root.editThreshold') } Edit
    //ko

    -# Form editor
    /ko if: $data == $root.currentThreshold()
    .box.w60
      .rightbuttons
        -#%button.fdelete{ ko(visible: '!isNewRecord') }
      %h1.header_text Properties
      %div
        %label{ko(css: {error: 'propertyNameError'})} Name
        %br
        %input.wp100{ko(value: :propertyName),type: :text, style: 'width:100%'}
        %br
        %br
        %label Apply this alert to
        %br
        %label
          %input{"data-bind" => "checked: isAllSite", :value => "true", :name => "site", :type => "radio"}
          All sites
        %label
          %input{"data-bind" => "checked: isAllSite", :value => "false", :name => "site", :type => "radio"}
          Some sites
        %br
        %br
        %div.wp100{ko(visible: 'isAllSite() == "false"' )}
          %input.sites{ko(autocompleteTagField: 'alertSites',objectType: "Site", valueUpdate: :afterkeydown), proxy: collection_sites_path(collection), valueField: 'id', displayField: 'name', type: :text}
      %br
      %h1.header_text Conditions
      %div
        %label
          %input{"data-bind" => "checked: isAllCondition", :value => "true", :name => "condition", :type => "radio"}
          All of following conditions
        %label
          %input{"data-bind" => "checked: isAllCondition", :value => "false", :name => "condition", :type => "radio"}
          Any of the following conditions
        %br
        /ko foreach :conditions
        /ko if: !missingField

        %select.condition{ ko(options: '$root.fields', optionsText: "'name'", value: :field, hasfocus: true) }

        /ko if: field().operators().length == 1
        %span{ ko(text: 'field().operators()[0].label') }
        %select{ ko(options: 'field().options', optionsText: "'label'", optionsValue:"'id'", value: :value) }
        //ko

        /ko if: field().operators().length > 1
        %select{ ko(options: 'field().operators', optionsText: "'label'", value: :op) }

        /ko if: !(field().kind() == 'text')
        %select{ ko(options: 'ValueType.ALL', optionsText: "'label'", value: :valueType) }
        //ko

        %label{ ko(css: { error: '!valid()' }) }
        %span.w06
          %input{ ko(value: :value, valueUpdate: :afterkeydown, css: { error: '!valid()' }), type: :text, style: 'width:60px' }

        /ko if: !(field().kind() == 'text')
        /ko if: valueType().label() == 'a percentage of'
        = "% compared to"
        %select.compare{ ko(options: '$root.compareFields', optionsText: "'name'", value: :compareField, hasfocus: true) }
        //ko
        //ko
        //ko
        -# Missing Field closure:
        //ko

        /ko if: missingField
        Invalid condition due to field missing. Please remove
        //ko

        %button.premove{ ko(click: '$parent.removeCondition') }
        %br
        //ko
      %button.fadd{ko(click: :addNewCondition) }
        Add another condition
      %hr
      %br
      .alert-icon
        %img{"data-bind" => "attr: { src:iconUrl }" }
      .color-palette
        %label Change site display on map
        %br
        %button.forange.fsize{ ko( click: "setIcon.bind($data, '#ff6f21')") }
        %button.fyellow.fsize{ ko( click: "setIcon.bind($data, '#ffc01f')") }
        %button.fgreen.fsize{ ko( click: "setIcon.bind($data, '#128e4e')") }
        %button.fcyan.fsize{ ko( click: "setIcon.bind($data, '#5ec8bd')") }
        %button.fred.fsize{ ko( click: "setIcon.bind($data, '#b01c21')") }
        %button.fblue.fsize{ ko( click: "setIcon.bind($data, '#3875d7')") }
      %br
      %hr
      %br
      %h1.header_text Notifications

      %label
        %input{"data-bind" => "checked: isNotify", :value => "false", :name => "notification", :type => "radio"}
        Do not send notifications
      %label
        %input{"data-bind" => "checked: isNotify", :value => "true", :name => "notification", :type => "radio"}
        Notify these people
      .people-notification{ko(visible: 'isNotify() == "true"' )}
        %div
          Send emails to:
          .list-box
            - collection.fields.where(kind: 'user').each  do |field|
              %label
                %input{ko(checked: 'usersEmail'), value: field.es_code, type: "checkbox"}= field.name
            - collection.fields.where(kind: 'email').each do |field|
              %label
                %input{ko(checked: 'fieldsEmail'), value: field.es_code, type: "checkbox"}= field.name
            - collection.users.each do |user|
              %label
                %input{ko(checked: 'membersEmail'), value: user.id, type: "checkbox"}= user.email
        %div
          Send text messages to:
          .list-box
            - collection.fields.where(kind: 'user').each  do |field|
              %label
                %input{ko(checked: 'usersPhone'), value: field.es_code, type: "checkbox"}= field.name
            - collection.fields.where(kind: 'phone').each do |field|
              %label
                %input.lalalale{ko(checked: 'fieldsPhone'), value: field.es_code, type: "checkbox"}= field.name
            - collection.users.each do |user|
              %label
                %input{ko(checked: 'membersPhone'), value: user.id, type: "checkbox"}= user.email
        %label{ko(css: {error: 'notificationMessageError'})} Message
        %br/
        %label.smalltext
          Use the following expressions to fill your message with sites data
          .template_text
            [
            %span{ko(click: 'addSiteNameToMessageNotification')}Site Name
            ]
            /ko foreach: $root.fields
            [
            %span{ ko(text: :name, click: '$parent.addFieldNameToMessageNotification') }
            ]
            //ko
        %textarea.ux-wajbar.w60{ko(value: :messageNotification, valueUpdate: :afterkeydown), placeholder: 'This alert is about [site name]. Occupation is now at [occupation]', maxlength: 140, rows: 4 }
        .clear
      %hr/

      .bottom-actions
        %button.white{ ko(click: '$root.saveThreshold', enable: :valid) } Save
        %a.tgrey{ ko(click: '$root.cancelThreshold'), href: 'javascript:void(0)' } Cancel
        /ko if: !valid()
        %span{ ko(text: "__('Can\\'t save') +  ': ' + error()"), style: 'color:red;margin-left:20px' } Can't save
        //ko
    //ko

    %br/
    //ko

    - if collection_admin?
      /ko if: fields().length == 0
      Please
      %strong add Layers
      first before managing your thresholds.
      //ko

    -# New threshold link
    /ko if: fields().length
    .box.grey.add{ ko(visible: '!currentThreshold()', click: 'addThreshold'), style: 'display:none'}
      .toptitle
        %span
          Add Alert
      .rightbuttons
        %button.cadd.right
    //ko

    -# New threshold link
    /ko if: fields().length
    /.box.grey.add{ ko(visible: 'state() == "listing"', click: 'showAddThreshold'), style: 'display:none'}
    /  .toptitle
    /    %span
    /      Add Alert
    /  .rightbuttons
    /    %button.cadd.right
    //ko
